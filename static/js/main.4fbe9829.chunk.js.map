{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","toggleReverse","visibleGoods","goods","sort","goodA","goodB","localeCompare","length","reverse","console","log","getReorderedGoods","className","type","cn","onClick","ALPHABET","LENGTH","boolean","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,YAAAA,E,oBAAAA,E,iBAAAA,M,KA2CE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAmBMC,EArDD,SACLC,EADK,GAGJ,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENE,EAAY,YAAOC,GAyBzB,OAvBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,IAAK,WACH,OAAOO,EAAME,cAAcD,GAE7B,IAAK,SACH,OAAOD,EAAMG,OAASF,EAAME,OAK9B,QACE,OAAO,MAITR,GACFE,EAAaO,UAIfC,QAAQC,IAAIb,EAAUE,GAEfE,EAwBcU,CACnBlB,EACA,CAAEI,WAAUE,eAGd,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAyB,aAAbjB,IAEhBkB,QAhCe,WACrBjB,EAAYN,EAASwB,WAwBjB,iCAYA,wBACEH,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAyB,WAAbjB,IAEhBkB,QAxCa,WACnBjB,EAAYN,EAASyB,SAgCjB,4BAYA,wBACEJ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAaf,IAEjBgB,QAhDQ,WACdf,GAAc,SAAAkB,GAAO,OAAKA,MAwCtB,sBAYe,SAAbrB,GAAuBE,IACvB,wBACEc,KAAK,SACLD,UAAU,mBACVG,QArDI,WACZjB,EAAYN,EAASI,MACrBI,GAAc,IAgDR,sBAUJ,6BACE,6BACGC,EAAakB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cCzIpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4fbe9829.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE = 'NONE',\n  ALPHABET = 'ALPHABET',\n  LENGTH = 'LENGTH',\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((goodA, goodB) => {\n    switch (sortType) {\n      case 'ALPHABET':\n        return goodA.localeCompare(goodB);\n\n      case 'LENGTH':\n        return goodA.length - goodB.length;\n\n      case 'NONE':\n        return 0;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, toggleReverse] = useState(false);\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverse = () => {\n    toggleReverse(boolean => !boolean);\n  };\n\n  const reset = () => {\n    setSortType(SortType.NONE);\n    toggleReverse(false);\n  };\n\n  const visibleGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== 'ALPHABET' },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== 'LENGTH' },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== 'NONE' || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>{good}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}